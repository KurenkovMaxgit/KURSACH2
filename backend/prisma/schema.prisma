generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model author {
  id      Int              @id @default(autoincrement())
  name    String           @db.VarChar(100)
  surname String           @db.VarChar(100)
  books   author_mm_book[]
}

model author_mm_book {
  author_id Int
  book_id   Int
  author    author @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: Cascade)
  book      book   @relation(fields: [book_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([author_id, book_id])
  @@index([author_id], map: "fki_author ")
  @@index([book_id], map: "fki_ref_book")
}

model book {
  id           Int              @id @default(autoincrement())
  title        String           @db.VarChar(255)
  year         Int?
  availability Boolean?         @default(true)
  authors      author_mm_book[]
  orders order_table[]    @relation("book_mm_order")

  @@index([title], map: "idx_book_title")
}

model order_table {
  id          Int       @id(map: "ordertable_pkey") @default(autoincrement())
  student_id  Int
  order_date  DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  return_date DateTime? @db.Date
  books       book[]    @relation("book_mm_order")
  student     student   @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "ordertable_student_id_fkey")

  @@index([student_id], map: "idx_order_student")
	@@map("order_table")
}

model student {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  surname     String        @db.VarChar(100)
  faculty     String?       @db.VarChar(100)
  phone       String?       @unique @db.VarChar(20)
  order_table order_table[]

  @@index([phone], map: "idx_student_phone")
}
